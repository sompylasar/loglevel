/*! loglevel - v1.3.0 - https://github.com/pimterry/loglevel - (c) 2015 Tim Perry - licensed MIT */
!function(a,b){"use strict";"object"==typeof module&&module.exports&&"function"==typeof require?module.exports=b():"function"==typeof define&&"object"==typeof define.amd?define(b):a.log=b()}(this,function(){"use strict";function a(a){return typeof console===g?!1:void 0!==console[a]?b(console,a):void 0!==console.log?b(console,"log"):f}function b(a,b){var c=a[b];if("function"==typeof c.bind)return c.bind(a);try{return Function.prototype.bind.call(c,a)}catch(d){return function(){return Function.prototype.apply.apply(c,[a,arguments])}}}function c(a,b){return function(){typeof console!==g&&(d(b),e[a].apply(e,arguments))}}function d(a){for(var b,c=0;c<h.length;c++)b=h[c],e[b]=a>c?f:e.methodFactory(b,a);b="log",e[b]=e.levels.INFO<a?f:e.methodFactory(b,a)}var e={},f=function(){},g="undefined",h=["trace","debug","info","warn","error"];e.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},e.methodFactory=function(b,d){return a(b)||c(b,d)},e.setLevel=function(a){if("string"==typeof a&&void 0!==e.levels[a.toUpperCase()]&&(a=e.levels[a.toUpperCase()]),!("number"==typeof a&&a>=0&&a<=e.levels.SILENT))throw new Error("log.setLevel() called with invalid level: "+a);return d(a),typeof console===g&&a<e.levels.SILENT?!1:void 0},e.enableAll=function(){e.setLevel(e.levels.TRACE)},e.disableAll=function(){e.setLevel(e.levels.SILENT)};var i=typeof window!==g?window.log:void 0;return e.noConflict=function(){return typeof window!==g&&window.log===e&&(window.log=i),e},e.enableAll(),e});